{"version":3,"sources":["components/Header/index.js","assets/images/headshot.jpg","components/About/index.js","components/Project/index.js","assets/images/project-1.jpg","assets/images/project-2.jpg","assets/images/project-3.jpg","assets/images/project-4.jpg","assets/images/project-5.png","components/Contact/index.js","utils/helpers.js","components/Resume/index.js","components/Footer/index.js","components/Nav/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","About","Card","component","elevation","CardMedia","image","headshot","alt","CardContent","projects","Project","id","map","project","name","description1","description2","technologies","username","password","Button","variant","link","target","rel","style","color","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","length","method","action","onSubmit","event","preventDefault","Object","values","every","alert","form","formData","honeypot","elements","fields","keys","filter","k","undefined","item","pos","self","indexOf","forEach","element","data","i","checked","selected","push","join","formDataNameOrder","JSON","stringify","formGoogleSheetName","dataset","sheet","formGoogleSendEmail","getFormData","buttons","querySelectorAll","disabled","disableAllButtons","url","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","reset","formElements","querySelector","display","thankYouMessage","encoded","encodeURIComponent","send","htmlFor","type","defaultValue","onBlur","rows","Resume","to","download","Footer","Nav","initialState","tabs","navigate","useNavigate","useLocation","pathname","state","setState","resolveState","useRef","isMounted","useEffect","current","setAsyncState","useCallback","newState","Promise","resolve","useAsyncState","currentTab","handleTabChange","renderPage","currentState","Tabs","onChange","textColor","TabIndicatorProps","backgroundColor","tab","Tab","label","App","currentPage","handlePageChange","path","Contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e72847ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\r\n\r\n    return (\r\n        <header>\r\n            <section className=\"hero\">\r\n                <h1>\r\n                    <a href=\"/\">Lauren Lattanzi</a>\r\n                </h1>\r\n            </section>\r\n        </header>\r\n    );\r\n}\r\n  \r\n  export default Header;","export default __webpack_public_path__ + \"static/media/headshot.e27e02e2.jpg\";","import React from 'react';\r\nimport headshot from '../../assets/images/headshot.jpg';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nfunction About() {\r\n  return (\r\n    <Card className='container about-me' component='section' elevation={6}>\r\n      <CardMedia \r\n        component=\"img\" \r\n        image={headshot} \r\n        alt=\"Headshot of Lauren looking fabulous\"\r\n        className='headshot' \r\n      />\r\n      <CardContent className=\"content-info\">\r\n        <h2>Who am I?</h2>\r\n        <p>\r\n          I am a Software Engineer with expertise in Full Stack Web Development and a passion for knowledge and creativity. \r\n          I love collaborating on teams and tackling any kind of challenge whether it's learning something completely new or taking a deeper dive into my existing skills.\r\n          I hope to bring a new creative take and a fresh, innovative perspective to my career in software development with my background in product development designing medical devices and experience in Full Stack Web Development.\r\n          As an engineer with an education in Biomedical Engineering and Web Development,  \r\n          I welcome and enjoy the challenge of solving complex problems.\r\n          <br /><br />\r\n          When I'm not coding, I spend my free time weightlifting, creating fitness programs, hiking, skiing, and traveling the world as much as I can.\r\n          Although, I do love spending a good amount of that free time learning new technologies and working on personal coding projects!\r\n        </p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport project1 from \"../../assets/images/project-1.jpg\";\r\nimport project2 from \"../../assets/images/project-2.jpg\";\r\nimport project3 from \"../../assets/images/project-3.jpg\";\r\nimport project4 from \"../../assets/images/project-4.jpg\";\r\nimport project5 from \"../../assets/images/project-5.png\";\r\n\r\nlet projects = [\r\n    {\r\n        \"name\": \"Roam\",\r\n        \"description1\": \"Roam is an app for people who want to travel sustainably. Traveling is great and we love it — but it also takes a toll on the planet. We wanted to create a fun, user-friendly application so people can travel while being mindful of climate change.\",\r\n        \"description2\": \"Users can create an account, create trip itineraries with friends, track expenses and split them at the end of their trip. Users can even offset the carbon emissions from their trip by donating to a charity, all through Roam.\",\r\n        \"image\": project1,\r\n        \"technologies\": \"MongoDb, Express.js, React, Node.js, Apollo-GraphQL, MUI, Stripe API\",\r\n        \"username\": \"Katlyn85\",\r\n        \"password\": \"otK5YtXpcalD1cm\",\r\n        \"link\": \"https://pacific-depths-60618.herokuapp.com/\"\r\n    },\r\n    {\r\n        \"name\": \"Twitcher\",\r\n        \"description1\": \"Twitcher is a website that allows birdwatching aficionados to collab online. Users can view upcoming events, resources for new birders, and a members-only blog where people can write about their birding experiences. The Bird of The Day feature on the homepage displays a new bird each day using API calls.\",\r\n        \"description2\": \"\",\r\n        \"image\": project2,\r\n        \"technologies\": \"Materialize CSS, Node.js, Express, Sequelize, Nodemailer, Handlebars, eBird API, and bcrypt.\",\r\n        \"link\": \"https://triangle-twitchers.herokuapp.com/\"\r\n    },\r\n    {\r\n        \"name\": \"Shop-Shop\",\r\n        \"description1\": \"A MERN application for an e-commerce platform that leverages react redux to render a single page web application where users can browse products, add/remove them from a shopping cart, and complete purchases which are all managed using Apollo GraphQL\",\r\n        \"description2\": \"\",\r\n        \"image\": project3,\r\n        \"technologies\": \"Node.js, Redux, React, Apollo-GraphQL, Express.js, MongoDB, and Stripe API\",\r\n        \"link\": \"https://frozen-beyond-06163.herokuapp.com/\"\r\n    },\r\n    {\r\n        \"name\": \"The Tech Blog\",\r\n        \"description1\": \"A Tech Blog where users can create an account, see blog posts from other users, add comments, and create their own posts from their personal dashboard.\",\r\n        \"description2\": \"\",\r\n        \"image\": project4,\r\n        \"technologies\": \"MVC paradigm, Handlebars.js, Sequelize, Express.js, SQL, Node.js, bcrypt, CSS\",\r\n        \"link\": \"https://frozen-escarpment-70188.herokuapp.com/\"\r\n    },\r\n    {\r\n        \"name\": \"Note-Eater\",\r\n        \"description1\": \"Note-Eater is a web application that helps musicians learn songs more efficiently with chord sheets and music videos all in one place with a simple search.\",\r\n        \"description2\": \"Users can search a music artist or band and see a list of their songs. When a user clicks a song from the list, they can access a link to chord sheets for the song and the corresponding music video is displayed in the browser.\",\r\n        \"image\": project5,\r\n        \"technologies\": \"HTML, CSS, JavaScript, YouTube API, Songsterr API\",\r\n        \"link\": \"https://foglea10.github.io/Note-Eater/\"\r\n    }\r\n];\r\n\r\nfunction Project() {\r\n    return (\r\n        <section id='project'>\r\n            {projects.map((project) => (\r\n                <Card className='container' component='section' elevation={6} key={project.name}>\r\n                    <CardMedia \r\n                        component=\"img\" \r\n                        image={project.image} \r\n                        alt={project.name}\r\n                        className='project-photo' \r\n                    />\r\n                    <CardContent className=\"content-info\">\r\n                        <h2>{project.name}</h2>\r\n                        <p>\r\n                            {project.description1}\r\n                        </p>\r\n                        {project.description2 && ( \r\n                            <p>\r\n                                {project.description2}\r\n                            </p>\r\n                        )}\r\n                        <h4>Technologies Used:</h4>\r\n                        <p>{project.technologies}</p>\r\n                    <div className='button-container'>\r\n                        {project.username && ( \r\n                            <div className='sample'>\r\n                                <h4>Sample log in details:</h4>\r\n                                <p><b>Username:</b> {project.username}</p>\r\n                                <p><b>Password:</b> {project.password}</p>\r\n                            </div>\r\n                        )}\r\n                        <Button \r\n                            variant='contained' \r\n                            href={project.link}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"button\"\r\n                        >\r\n                            View Application\r\n                            <OpenInNewIcon style={{ color: '#ffffff' }} className='icon-open'/>\r\n                        </Button>\r\n                    </div>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </section>\r\n    );\r\n}\r\n  \r\nexport default Project;","export default __webpack_public_path__ + \"static/media/project-1.e7d8349c.jpg\";","export default __webpack_public_path__ + \"static/media/project-2.46243e74.jpg\";","export default __webpack_public_path__ + \"static/media/project-3.95612768.jpg\";","export default __webpack_public_path__ + \"static/media/project-4.2d122cf8.jpg\";","export default __webpack_public_path__ + \"static/media/project-5.937cb594.png\";","import React, { useState } from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction ContactForm() {\r\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const { name, email, message } = formState;\r\n\r\n    function handleChange(e) {\r\n        // name property here actually refers to the name of the target rather than the name input\r\n        if (e.target.name === 'email') {\r\n            const isValid = validateEmail(e.target.value);\r\n            // isValid conditional statement\r\n            if (!isValid) {\r\n                setErrorMessage('Your email is invalid.');\r\n            } else {\r\n                setErrorMessage('');\r\n            }\r\n        } else {\r\n            if (!e.target.value.length) {\r\n                setErrorMessage(`${e.target.name} is required.`);\r\n            } else {\r\n                setErrorMessage('');\r\n            }\r\n        } \r\n\r\n        if (!errorMessage) {\r\n            setFormState({...formState, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    // get all data in form and return object\r\n    function getFormData(form) {\r\n        var elements = form.elements;\r\n        var honeypot;\r\n    \r\n        var fields = Object.keys(elements).filter(function(k) {\r\n        if (elements[k].name === \"honeypot\") {\r\n            honeypot = elements[k].value;\r\n            return false;\r\n        }\r\n        return true;\r\n        }).map(function(k) {\r\n        if(elements[k].name !== undefined) {\r\n            return elements[k].name;\r\n        // special case for Edge's html collection\r\n        }else if(elements[k].length > 0){\r\n            return elements[k].item(0).name;\r\n        }\r\n        }).filter(function(item, pos, self) {\r\n        return self.indexOf(item) == pos && item;\r\n        });\r\n    \r\n        var formData = {};\r\n        fields.forEach(function(name){\r\n        var element = elements[name];\r\n        \r\n        // singular form elements just have one value\r\n        formData[name] = element.value;\r\n    \r\n        // when our element has multiple items, get their values\r\n        if (element.length) {\r\n            var data = [];\r\n            for (var i = 0; i < element.length; i++) {\r\n            var item = element.item(i);\r\n            if (item.checked || item.selected) {\r\n                data.push(item.value);\r\n            }\r\n            }\r\n            formData[name] = data.join(', ');\r\n        }\r\n        });\r\n    \r\n        // add form-specific values into the data\r\n        formData.formDataNameOrder = JSON.stringify(fields);\r\n        formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\r\n        formData.formGoogleSendEmail\r\n        = form.dataset.email || \"\"; // no email by default\r\n    \r\n        return {data: formData, honeypot: honeypot};\r\n    }\r\n    \r\n    function handleFormSubmit(event) {  // handles form submit without any jquery\r\n        event.preventDefault();           // we are submitting via xhr below\r\n\r\n        // validate form data\r\n        const validateForm = Object.values(formState).every(value => {\r\n            if (value) {\r\n                return true;\r\n            }\r\n            return false\r\n        });\r\n\r\n        if (!validateForm) {\r\n            alert(\"Failed to submit form. Please fill out all fields.\");\r\n            return false;\r\n        }\r\n\r\n        var form = event.target;\r\n        var formData = getFormData(form);\r\n        var data = formData.data;\r\n    \r\n        // If a honeypot field is filled, assume it was done so by a spam bot.\r\n        if (formData.honeypot) {\r\n        return false;\r\n        }\r\n    \r\n        disableAllButtons(form);\r\n        var url = form.action;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('POST', url);\r\n        // xhr.withCredentials = true;\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n            form.reset();\r\n            var formElements = form.querySelector(\".form-elements\")\r\n            if (formElements) {\r\n                formElements.style.display = \"none\"; // hide form\r\n            }\r\n            var thankYouMessage = form.querySelector(\".thankyou_message\");\r\n            if (thankYouMessage) {\r\n                thankYouMessage.style.display = \"block\";\r\n            }\r\n            }\r\n        };\r\n        // url encode form data for sending as post data\r\n        var encoded = Object.keys(data).map(function(k) {\r\n            return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\r\n        }).join('&');\r\n        xhr.send(encoded);\r\n    }\r\n    \r\n    function disableAllButtons(form) {\r\n        var buttons = form.querySelectorAll(\"button\");\r\n        for (var i = 0; i < buttons.length; i++) {\r\n        buttons[i].disabled = true;\r\n        }\r\n    }\r\n      \r\n    // JSX\r\n    return (\r\n        <>\r\n        <Card id='contact' component='section' elevation={6}>\r\n            <div className='card-head'>\r\n                <h2>Let's get in touch!</h2>\r\n            </div>\r\n            <CardContent>\r\n            <form id=\"contact-form\" className='gform' method=\"POST\" data-email=\"llattan@ncsu.edu\" \r\n            action=\"https://script.google.com/macros/s/AKfycbz4cO6RFKEYwJ3ljq8pxZCleg5U9bh9lu0VyU-hWzqtBKEN2nAWrTzJaxCxbn_U2kec/exec\"\r\n            onSubmit={handleFormSubmit}>\r\n                <div className='form-elements'>\r\n                    <fieldset>\r\n                        <label htmlFor=\"name\">Full Name:</label>\r\n                        <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange}/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"email\">Email address:</label>\r\n                        <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange}/>\r\n                    </fieldset>\r\n                    <fieldset id='contact-message'>\r\n                        <label htmlFor=\"message\">Message:</label>\r\n                        <textarea name=\"message\" rows=\"5\"  defaultValue={message} onBlur={handleChange}/>\r\n                    </fieldset>\r\n                    <fieldset style={{display:'none'}} className=\"honeypot-field\">\r\n                        <label htmlFor=\"honeypot\">To help avoid spam, utilize a Honeypot technique with a hidden text field; must be empty to submit the form! Otherwise, we assume the user is a spam bot.</label>\r\n                        <input id=\"honeypot\" type=\"text\" name=\"honeypot\" value=\"\" />\r\n                    </fieldset>\r\n\r\n                    {errorMessage && (\r\n                        <div>\r\n                            <p className=\"error-text\">{errorMessage}</p>\r\n                        </div>\r\n                    )}\r\n                    <div className='button-container'>\r\n                        <Button \r\n                            variant='contained' \r\n                            type='submit'\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"button\"\r\n                        >\r\n                            Submit Form\r\n                            <SendIcon style={{ color: '#ffffff' }} className='icon-open'/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div style={{display:'none'}} className=\"thankyou_message\">\r\n                    <h3>Thanks for your message. I will get back to you soon!\r\n                    </h3>\r\n                </div>\r\n            </form>\r\n            </CardContent>\r\n        </Card>\r\n        {/* <script data-cfasync=\"false\" src=\"form-submission-handler.js\"></script> */}\r\n        </>\r\n    )\r\n}\r\n    \r\nexport default ContactForm;","import { useState, useRef, useCallback, useEffect } from \"react\";\r\n\r\nexport function validateEmail(email) {\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function useAsyncState(initialState) {\r\n  const [state, setState] = useState(initialState);\r\n  const resolveState = useRef();\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (resolveState.current) {\r\n      resolveState.current(state);\r\n    }\r\n  }, [state]);\r\n\r\n  const setAsyncState = useCallback(\r\n    newState =>\r\n      new Promise(resolve => {\r\n        if (isMounted.current) {\r\n          resolveState.current = resolve;\r\n          setState(newState);\r\n        }\r\n      }),\r\n    []\r\n  );\r\n\r\n  return [state, setAsyncState];\r\n};","import React from \"react\";\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport { Link } from 'react-router-dom';\r\nimport FileDownloadDoneIcon from '@mui/icons-material/FileDownloadDone';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div id='resume'>\r\n            <h2>Lauren M. Lattanzi</h2>\r\n            <section id='details'>\r\n                <p>Email: Llattanzi714@gmail.com</p>\r\n                <p>Phone: (631) 235-8775</p>\r\n                <p>805 Ambergate Sta.</p>\r\n                <p>Apex, NC 27502</p>\r\n            </section>\r\n            <section className='resume-sections'>\r\n                <h3>OBJECTIVE:</h3>\r\n                <div className='content'>\r\n                    <p>\r\n                        Seeking a full-time software position where I can leverage both my front-end and\r\n                        back-end development skills to enhance functionality of a product.\r\n                    </p>\r\n                </div>\r\n                <h3>EXPERIENCE:</h3>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        <b>Software Engineer</b>\r\n                        <i>Ultralinq Healthcare Solutions</i>\r\n                    </p>\r\n                    <p>\r\n                        <b>Sept 2022 - Present</b>\r\n                        <i>Morrisville, North Carolina</i>\r\n                    </p>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        Responsible for new feature development and bug fixes for both the front and back\r\n                        end of the web application.\r\n                    </li>\r\n                    <li>\r\n                        Part of a team focusing on converting much of the current PHP backend to a\r\n                        separate Kotlin application.\r\n                    </li>\r\n                    <li>\r\n                        Fixing bugs and addressing user concerns and new feature requests with existing\r\n                        PHP and HTML/JS legacy code.\r\n                    </li>\r\n                    <li>\r\n                        Restructured the legacy user auth process to facilitate AWS Cognito and SSO\r\n                        implementation.\r\n                    </li>\r\n                    <li>\r\n                        Following provided OpenAPI documentation and communicating with the UI\r\n                        developers to create REST APIs that suit their requirements and desired format.\r\n                    </li>\r\n                    <li>\r\n                        Building REST APIs in Kotlin with Spring Boot and JPA along with Hibernate and\r\n                        Javax validation. Writing unit tests in Spring Boot for all controllers and services.\r\n                    </li>\r\n                    <li>\r\n                        Working with AWS to upload and retrieve media files from S3 and debug various\r\n                        servers with CloudWatch.\r\n                    </li>\r\n                    <li>\r\n                        Following agile development practices with Jira, Confluence, and Bitbucket.\r\n                    </li>\r\n                </ul>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        <b>Full-stack Web Developer</b>\r\n                        <i>Paperless Fundraisers LLC</i>\r\n                    </p>\r\n                    <p>\r\n                        <b>Aug 2022 - Oct 2022</b>\r\n                        <i>Remote - Part Time Contracting</i>\r\n                    </p>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        Developed front and back end features of an e-commerce website for fundraisers\r\n                        using TypeScript, Next.js, React, Redux, Prisma, Supabase, and Material UI.\r\n                    </li>\r\n                    <li>\r\n                        Created API routes and CRUD calls to communicate between the React side of the\r\n                        app and the database with information regarding sales, employees, customers,\r\n                        orders, products, and companies.\r\n                    </li>\r\n                    <li>\r\n                        Designed and implemented functional UIs for several pages in React with Material\r\n                        UI components for capturing user input and displaying data retrieved from internal\r\n                        and external APIs.\r\n                    </li>\r\n                </ul>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        <b>R&D Engineer</b>\r\n                        <i>Blur Product Development</i>\r\n                    </p>\r\n                    <p>\r\n                        <b>Sept 2018 - Sept 2022</b>\r\n                        <i>Cary, North Carolina</i>\r\n                    </p>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        Owned the development and testing of complex data processing\r\n                        algorithms in MATLAB for implementation in wearable medical device firmware.\r\n                    </li>\r\n                    <li>\r\n                        Leveraged OOP in MATLAB and interpreted firmware written in C to optimize\r\n                        code compatibility and conversion from the development/test environment in\r\n                        MATLAB to production firmware.\r\n                    </li>\r\n                    <li>\r\n                        Extensively tested the algorithms and associated mobile application in simulated use\r\n                        and V&V testing environments to bring the device to successful clinical trials. \r\n                    </li>\r\n                    <li>\r\n                        Solely responsible for processing and analyzing all data collected from the app and\r\n                        wearable device logs during clinical trials to assess product performance, study user\r\n                        behaviors, and identify issues/potential improvements.\r\n                    </li>\r\n                    <li>\r\n                        Worked closely with the app and firmware developers to communicate bugs,\r\n                        solutions, and functions necessary to interface with the algorithm.\r\n                    </li>\r\n                    <li>\r\n                        Used GitLab and GitKraken for source control and issue tracking.\r\n                    </li>\r\n                    <li>\r\n                        Followed agile development practices and project management using Jira.\r\n                    </li>\r\n                </ul>\r\n                <h3>PROJECTS:</h3>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        <b>Roam</b>\r\n                    </p>\r\n                    <p>\r\n                        <b>July 2022 - Aug 2022</b>\r\n                    </p>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        Created an interactive MERN stack single-page application that allows users to\r\n                        create trip itineraries with friends, split expenses, and offset carbon emissions.\r\n                    </li>\r\n                    <li>\r\n                        Leveraged Apollo GraphQL with an Express.js server and Mongoose ODM to\r\n                        query and manipulate a MongoDB database containing user, trip, and expense data.\r\n                    </li>\r\n                    <li>\r\n                        Implemented a carbon offsetting feature where users can donate to a variety of\r\n                        charities using Stripe API to complete payments.\r\n                    </li>\r\n                    <li>\r\n                        Built a responsive front end using React, Material UI, and custom CSS.\r\n                    </li>\r\n                    <li>\r\n                        Incorporated user authentication middleware using JWT to selectively limit site\r\n                        experience to logged in users and protect API routes.\r\n                    </li>\r\n                </ul>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        <b>Twitcher</b>\r\n                    </p>\r\n                    <p>\r\n                        <b>May 2022</b>\r\n                    </p>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        Built a full stack web app to serve as a bird watching blog for the local community.\r\n                    </li>\r\n                    <li>\r\n                        Developed the back-end in Node.js following OOP and the MVC paradigm with\r\n                        the use of Express, MySQL, and Sequelize ORM.\r\n                    </li>\r\n                    <li>\r\n                        Created a front-end with Materialize CSS framework, HTML generated with\r\n                        handlebars.js, and JavaScript for event handlers and requests to internal APIs.\r\n                    </li>\r\n                    <li>\r\n                        Created RESTful web APIs in Node.js to get, edit, delete and add blog posts,\r\n                        comments, and users stored in SQL database which were tested using Insomnia.\r\n                    </li>\r\n                    <li>\r\n                        Implemented user authentication with password hashing to protect API routes.\r\n                    </li>\r\n                </ul>\r\n                <h3>EDUCATION:</h3>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        <b>NC State University and UNC Chapel Hill</b>\r\n                        <i>B.S., Biomedical and Health Sciences Engineering</i>\r\n                    </p>\r\n                    <p>\r\n                        <b>May 2018</b>\r\n                        GPA: 3.7\r\n                    </p>\r\n                </div>\r\n                <div id='ed-2'>\r\n                    <div className='title-date content'>\r\n                        <p>\r\n                            <b>Full Stack Coding Bootcamp</b>\r\n                            <i>UNC Chapel Hill</i>\r\n                        </p>\r\n                        <p>\r\n                            <b>Feb 2022 – July 2022</b>\r\n                            <p>Grade: 100</p>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <h3>LANGUAGES:</h3>\r\n                <div className='title-date content'>\r\n                    <p>\r\n                        JavaScript, TypeScript, PHP, Kotlin, HTML, CSS, MATLAB\r\n                    </p>\r\n                </div>\r\n                <h3>TECHNICAL SKILLS:</h3>\r\n                <div className='title-date content'>\r\n                    <p id='skills'>\r\n                        Spring Boot, Java Persistence API, Node.js, Next.js, React, Redux, MongoDB,\r\n                        Express.js, Apollo-GraphQL, SQL, jQuery, Responsive Design, AWS, Unit Testing,\r\n                        Hibernate and Javax validation, IntelliJ IDEA, VS Code, DataGrip, Docker, Git,\r\n                        Atlassian Stack, Agile Development\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n            <div className='button-container'>\r\n                <Link to='%PUBLIC_URL%/assets/resume.pdf' target='_blank' download='Lauren-Lattanzi-Resume.pdf'>\r\n                    <Button \r\n                        variant='contained' \r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"button\"\r\n                    >\r\n                        Download Resume\r\n                        <DownloadIcon style={{ color: '#ffffff' }} className='icon-open'/>\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n        <div className=\"footer-container\">\r\n            <a href=\"https://github.com/llattanzi\">\r\n                <GitHubIcon style={{ color: '#ffffff'}} className=\"icons\"/>\r\n                <p>\r\n                    GitHub\r\n                </p>\r\n            </a>\r\n\r\n            <a href=\"https://www.linkedin.com/in/lauren-lattanzi/\">\r\n                <LinkedInIcon style={{ color: '#ffffff' }} className=\"icons\" />\r\n                <p>\r\n                    LinkedIn\r\n                </p>\r\n            </a>\r\n\r\n            <a href=\"https://stackoverflow.com/users/17769864/lauren-lattanzi\">\r\n                <p>\r\n                    Stack Overflow\r\n                </p>\r\n            </a>\r\n        </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport { Tab } from '@mui/material';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useAsyncState } from '../../utils/helpers';\r\n\r\nfunction Nav() {\r\n    const tabs = ['About', 'Portfolio', 'Resume', 'Contact'];\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    let initialState;\r\n\r\n    switch (location.pathname) {\r\n        case \"/Portfolio\":\r\n            initialState = 1;\r\n            break\r\n        case \"/Resume\":\r\n            initialState = 2;\r\n            break\r\n        case \"/Contact\":\r\n            initialState = 3;\r\n            break\r\n        default:\r\n            initialState = 0;\r\n            break\r\n    }\r\n\r\n    const [currentTab, handleTabChange] = useAsyncState(initialState);\r\n\r\n    const renderPage = async (event, value) => {\r\n        const currentState = await handleTabChange(value);\r\n        navigate(`/${tabs[currentState]}`);\r\n    };\r\n\r\n    return (\r\n        <div className='nav-tabs'>\r\n            <Tabs \r\n            value={currentTab}\r\n            onChange={renderPage}\r\n            textColor=\"inherit\"\r\n            className=\"tab-list\"\r\n            TabIndicatorProps={{\r\n                style: {\r\n                  backgroundColor: \"#ffffff\"\r\n                }\r\n            }}\r\n            >\r\n                {tabs.map((tab, i) => (\r\n                    <Tab \r\n                    value={i} \r\n                    label={tab} \r\n                    key={tab} \r\n                    className='tab'\r\n                    />\r\n                 ))}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Project from './components/Project';\r\nimport ContactForm from './components/Contact';\r\nimport Resume from './components/Resume';\r\nimport Footer from './components/Footer';\r\nimport Nav from './components/Nav';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [currentPage, handlePageChange] = useState('About');\r\n\r\n  return (\r\n      <Router>\r\n        <Header handlePageChange={handlePageChange} currentPage={currentPage}\r\n        ></Header>\r\n        <Nav />\r\n        <main className=\"main-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<About />} />\r\n            <Route path=\"/react-portfolio\" element={<About />} />\r\n            <Route path=\"/About\" element={<About />} />\r\n            <Route path=\"/Portfolio\" element={<Project />} />\r\n            <Route path=\"/Resume\" element={<Resume />} />\r\n            <Route path=\"/Contact\" element={<ContactForm />} />\r\n          </Routes>\r\n        </main>\r\n          <Footer/>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'materialize-css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}